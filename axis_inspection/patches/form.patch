diff --git frappe/public/js/frappe/form/form.js frappe/public/js/frappe/form/form.js
index 9e6d3f0..e336505 100644
--- frappe/public/js/frappe/form/form.js
+++ frappe/public/js/frappe/form/form.js
@@ -662,7 +662,39 @@ frappe.ui.form.Form = class FrappeForm {
 		var me = this;
 		return new Promise(resolve => {
 			this.validate_form_action("Submit");
-			frappe.confirm(__("Permanently Submit {0}?", [this.docname]), function() {
+			var total_billing_amount=0.0
+			$.each(this.doc.time_sheets, function(idx,time){
+				total_billing_amount+=time.billing_amount
+			});
+			if (this.doctype.toLowerCase()=="delivery note" && total_billing_amount> this.doc.total){
+				frappe.confirm(__("Total amount of Delivery Note is less than total amount of timesheet.Do you want to submit {0}?", [this.docname]), function() {
+					frappe.validated = true;
+					me.script_manager.trigger("before_submit").then(function() {
+					if(!frappe.validated) {
+						return me.handle_save_fail(btn, on_error);
+					}
+					me.save('Submit', function(r) {
+						if(r.exc) {
+							me.handle_save_fail(btn, on_error);
+						} else {
+							frappe.utils.play_sound("submit");
+							callback && callback();
+							me.script_manager.trigger("on_submit")
+								.then(() => resolve(me))
+								.then(() => {
+									if (frappe.route_hooks.after_submit) {
+										let route_callback = frappe.route_hooks.after_submit;
+										delete frappe.route_hooks.after_submit;
+										route_callback(me);
+									}
+								});
+						}
+					}, btn, () => me.handle_save_fail(btn, on_error), resolve);
+				});
+			}, () => me.handle_save_fail(btn, on_error) );
+		}
+	else{
+					frappe.confirm(__("Permanently Submit {0}?", [this.docname]), function() {
 				frappe.validated = true;
 				me.script_manager.trigger("before_submit").then(function() {
 					if(!frappe.validated) {
@@ -688,6 +720,7 @@ frappe.ui.form.Form = class FrappeForm {
 					}, btn, () => me.handle_save_fail(btn, on_error), resolve);
 				});
 			}, () => me.handle_save_fail(btn, on_error) );
+	}
 		});
 	}
 
